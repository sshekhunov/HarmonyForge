### LearningCourseService API Testing
### Base URL: http://localhost:5085
### HTTPS URL: https://localhost:7064

@baseUrl = http://localhost:5085
@baseUrlHttps = https://localhost:7064

### Variables for testing
@courseId = 00000000-0000-0000-0000-000000000000

### 1. Get All Learning Courses
GET {{baseUrl}}/api/learningcourses
Accept: application/json

###

### 2. Get Learning Course by ID (replace with actual ID after creating a course)
GET {{baseUrl}}/api/learningcourses/{{courseId}}
Accept: application/json

###

### 3. Create a new Learning Course (Simple)
POST {{baseUrl}}/api/learningcourses
Content-Type: application/json

{
  "title": "Introduction to C# Programming",
  "description": "Learn the fundamentals of C# programming language",
  "modules": []
}

###

### 4. Create a Learning Course with Modules and Module Items
POST {{baseUrl}}/api/learningcourses
Content-Type: application/json

{
  "title": "Advanced C# Development",
  "code": "code",
  "description": "Comprehensive course covering advanced C# concepts and best practices",
  "modules": [
    {
      "title": "Object-Oriented Programming",
      "description": "Deep dive into OOP principles in C#",
      "items": [
        {
          "id": "00000000-0000-0000-0000-000000000001",
          "title": "Classes and Objects",
          "description": "Understanding classes and object instantiation",
          "type": 0
        },
        {
          "id": "00000000-0000-0000-0000-000000000002",
          "title": "Inheritance Exercise",
          "description": "Practice creating inheritance hierarchies",
          "type": 1
        },
        {
          "id": "00000000-0000-0000-0000-000000000003",
          "title": "OOP Concepts Quiz",
          "description": "Test your understanding of OOP concepts",
          "type": 2
        }
      ]
    },
    {
      "title": "Asynchronous Programming",
      "description": "Master async/await patterns in C#",
      "items": [
        {
          "id": "00000000-0000-0000-0000-000000000004",
          "title": "Async/Await Basics",
          "description": "Introduction to asynchronous programming",
          "type": 0
        },
        {
          "id": "00000000-0000-0000-0000-000000000005",
          "title": "Task Management Exercise",
          "description": "Practice with Task and Task<T>",
          "type": 1
        }
      ]
    }
  ]
}

###

### 5. Update Learning Course (replace courseId with actual ID)
PUT {{baseUrl}}/api/learningcourses
Content-Type: application/json

{
  "id": "{{courseId}}",
  "code": "code",
  "title": "Updated C# Programming Course",
  "description": "Updated description with more comprehensive content",
  "modules": [
    {
      "title": "Updated Module 1",
      "description": "Updated module description",
      "items": [
        {
          "id": "00000000-0000-0000-0000-000000000006",
          "title": "Updated Item",
          "description": "Updated item description",
          "type": 0
        }
      ]
    }
  ]
}

###

### 6. Delete Learning Course (replace courseId with actual ID)
DELETE {{baseUrl}}/api/learningcourses/{{courseId}}

###

### 7. Test with HTTPS
GET {{baseUrlHttps}}/api/learningcourses
Accept: application/json

###

